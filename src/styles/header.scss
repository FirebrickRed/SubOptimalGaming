// I need a function that gets the height of the black trapezoid and white trapizoid
$baseHeight: 50px;

@mixin temp($isOutline) {
  @if $isOutline {
    border-image: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(46,46,46,1) 30%, rgba(28,28,28,1) 50%, rgba(46,46,46,1) 70%, rgba(0,0,0,1) 100%);
    border-style: solid;
    border-width: 50px;
    // border-top: $baseHeight solid #000;
    // border-left: $baseHeight+2px/2 solid transparent;
    // border-right: $baseHeight+2px/2 solid transparent;
    z-index: -2;
  } @else {
    // $baseHeight: $baseHeight - 5px;
    // border-top: $baseHeight+2px solid #aaa;
    // border-left: $baseHeight+2px/2 solid transparent;
    // border-right: $baseHeight+2px/2 solid transparent;
    // z-index: -1;
  }

  content: '';
  top: 0;
  left: 50%;
  width: 75vw;
  margin: auto;
  position: absolute;
  transform: translate(-50%);
}

// below 1024 use mobile
$background: lightcoral;
$easing: cubic-bezier(.25,1.7,.35,.8);
$duration: 0.5s;
$navIconWidth: 30px;

// Mobile dropdown icon
.mobile-icon {
  width: 3em;
  display: block;
  padding: 0.5em;
  position: relative;
  cursor: pointer;
  border-radius: 4px;
  margin-top: 1.5em;
  margin-left: auto;
  margin-right: 2em;
  z-index: 101;

  @media screen and (min-width: 1024px) {
    display: none;
  }
  .left-bar {
    position: absolute;
    background-color: transparent;
    top: 0;
    left:0;
    width: $navIconWidth;
    height: 10px;
    display: block;
    transform: rotate(35deg);
    float: right;
    border-radius: 2px;
    &:after {
      content:"";
      background-color: white;
      width: $navIconWidth;
      height: 10px;
      display: block;
      float: right;
      border-radius: 6px 10px 10px 6px;
      transition: all $duration $easing;
      z-index: -1;
    }
  }
  
  .right-bar {
    position: absolute;
    background-color: transparent;
    top: 0px;
    left: 18px;
    width: $navIconWidth;
    height: 10px;
    display: block;
    transform: rotate(-35deg);
    float: right;
    border-radius: 2px;
    &:after {
      content:"";
      background-color: white;
      width: $navIconWidth;
      height: 10px;
      display: block;
      float: right;
      border-radius: 10px 6px 6px 10px;
      transition: all $duration $easing;
      z-index: -1;
    }
  }
}
.open-nav {
  .left-bar:after {
    transform-origin: center center;
    transform: rotate(-70deg);
  }
  .right-bar:after {
    transform-origin: center center;
    transform: rotate(70deg);
  }
}

header {
  height: 3.5rem;
  @media screen and (min-width: 1024px) {
    position: sticky;
    top: 0;
    display:flex;
    overflow:hidden;
    justify-content: center;
    height: 100px;
  }
}

.nav {
  font-family: $header-font;
  width: 100vw;
  height: 3.5rem;
  position: absolute;
  font-size: 6vw;
  text-transform: uppercase;
  display: flex;
  z-index: 100;
  flex-direction: row;
  background: black;
  color: white;
  transition: height 1s;
  
  @media screen and (min-width: 1024px) {
    background: unset;
    -webkit-box-sizing: content-box;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
    height: 0;
    border: 80px solid rgba(0,0,0,0);
    border-top: 0 solid;
    border-bottom: 100px solid rgba(1, 1, 1, .4);
    -webkit-border-radius: 20px 20px 0 0;
    border-radius: 20px 20px 0 0;
    color: rgba(0,0,0,0.7);
    -o-text-overflow: clip;
    text-overflow: clip;
    -webkit-transform: rotateX(180deg);
    transform: rotateX(180deg);
    margin-top: -40px;
    width: 75vw;
    position: relative;
    transition: all 0.7s ease;
  }

  .mobile-home-link {
    color: white;
    font-size: clamp(24px, 10vw, 50px);
    margin-left: 0.5em;
    display: flex;
    flex-direction: column;
    justify-content: center;
    opacity: 1;
    transition: opacity .5s;
    @media screen and (min-width: 1024px) {
      display: none;
    }
  }

  ul {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    height: 100%;
    width: 100%;
    position: absolute;
    top: -100vh;
    background: black;
    transition: top 1s;
  
    @media screen and (min-width: 1024px) {
      top: 6.5vw;
      flex-direction: row;
      background: unset;
      -webkit-transform: rotateX(180deg);
      transform: rotateX(180deg);
      transition: all 0.5s ease;
    }

    .mid {
      display: none;

      @media screen and (min-width: 1024px) {
        display: unset;
        img {
          width: 100px;
        }
      }
    }

    li {
      text-align: center;
      a {
        color: white;
        font-size: 10vw;
        @media screen and (min-width: 1024px) {
          font-size: 2rem;
        }
      }
    }
  }
}

nav.open-nav {
  height: 100vh;

  @media screen and (min-width: 1024px) {
    height: 0;
  }
  .mobile-home-link {
    opacity: 0%;
  }
  
  ul {
    top: 0;

    @media screen and (min-width: 1024px) {
      top: 6.5vw;
    }
  }
}


// Above 1024 use desktop